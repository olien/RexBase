// basecondition ~ less-framework ~ v3.2.1
// copyright 2014 ~ Joachim Doerr ~ hello@basecondition.com
// licensed under MIT or GPLv3 ~ git.io/OJYZgw

// ----------------------------------------------------- ~ icon
// #icon > .icon("\2606", after);
// #icon > .element("\2606", before);
// #icon > .base(entypo);

// @dependency: font.less

// @namespace: #icon

#icon {
    
    // @methode: .icon
    // @usage: #icon > .icon(star-empty, "\2606", before);
    
    .icon(@var-content: false, @var-direction: before) {
        .recursion(@var-content, @var-direction) when not (@var-content = false) {
            &:@{var-direction} {
                content: "@{var-content}";
            }
        }
        .recursion-request(@var-content, @var-direction) when (@var-direction = before) {
            .recursion(@var-content, @var-direction);
        }
        .recursion-request(@var-content, @var-direction) when (@var-direction = after) {
            .recursion(@var-content, @var-direction);
        }
        .recursion-request(@var-content, @var-direction);
    }
    
    // @methode: .element
    // @usage: #icon > .element("\2606", after);
    
    .element(@var-content, @var-direction: before) {
        #icon > .icon(@var-content, @var-direction);
    }
    
    // @methode: .base
    // @usage: #icon > .base(entypo); // <'font-name'>
    
    .base(@var: false) {
        .recursion(@var) when not (@var = false) {
            font-family: "@{var-font-name}";
            speak: none;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            #font > .smoothing(antialiased);
        }
        .recursion(@var);
    }
}