// basecondition ~ less-framework ~ v3.2.1
// copyright 2014 ~ Joachim Doerr ~ hello@basecondition.com
// licensed under MIT or GPLv3 ~ git.io/OJYZgw

// ----------------------------------------------------- ~ form
// #form > .base(12px, 1.4em, 20px, 0.75, 14px, #444, none, bold);
// #form > .label(bold, 20px, 0.25);
// #form > .input(12px, 1.4em, 20px, ~"1px solid #ddd", #333, @base-form-area-shadow, 3px);
// #form > .textarea(12px, 1.4em, 20px, ~"1px solid #ddd", #333, @base-form-area-shadow, 3px)
// #form > .checkboxes(20px);
// #form > .radio(20px);
// #form > .select(12px, 1.4em, 20px, ~"1px solid #ddd", #333, @base-form-area-shadow, 3px);
// #form > .button(20px);

// @namespace: #form

#form {
    
    // @methode: .input-element
    // @usage: #form > .input-element(13px, 1.4em, 20px, ~"1px solid #ddd", @base-form-input-shadow, 2px, 100%, 0.2, 0.4, 0.75);
    
    .input-element(@var-size: @base-font-size, @var-line-height: @base-line-height, @var-distance: @base-distance, @var-border: @base-form-input-border, @var-shadow: @base-form-input-shadow, @var-radius: @base-form-input-radius, @var-width: 100%, @var-padding-top-bottom-factor: 0.2, @var-padding-left-right-factor: 0.4, @var-margin-bottom-factor: 0.75) {
        #box > .display(inline-block);
        #box > .shadow(@var-shadow);
        #box > .sizing(border-box);
        #border > .radius(@var-radius);
        font-size: @var-size;
        line-height: @var-line-height;
        width: @var-width;
        border: @var-border;
        padding: ceil(@var-distance * @var-padding-top-bottom-factor) ceil(@var-distance * @var-padding-left-right-factor);
        margin: 0 0 ceil(@var-distance * @var-margin-bottom-factor) 0;
        vertical-align: middle;
    }
    
    // @methode: .input-color
    // @usage: #form > .input-color(#888);
    .input-color(@var-color) {
        color: @var-color;
    }
    
    // @methode: .input-focus-color
    // @usage: #form > .input-focus-color(#000);
    .input-focus-color(@var-color) {
        &:focus {
            color: @var-color;
        }
    }
    
    // @methode: .input-focus-border
    // @usage: #form > .input-focus-border(#ccc);
    
    .input-focus-border(@var-border: @base-form-input-border-focus) {
        &:focus {
            border-color: @var-border;
        }
    }
    
    // @methode: .input-focus
    // @usage: #form > .input-focus(#000, #ccc);
    
    .input-focus(@var-color: #000, @var-border: @base-form-input-border-focus) {
        #form > .input-focus-border(@var-border);
        #form > .input-focus-color(@var-color);
    }
    
    // @methode: .defaults
    // @usage: #form > .defaults();
    
    .defaults() {
        #form > .base();
        #form > .label();
        #form > .textarea();
        #form > .input();
        #form > .select();
        #form > .checkboxes();
        #form > .radio();
        #form > .button();
    }
    
    // @methode: .form()
    // @usage: #form > .form(12px, 1.4em, 20px, 0.75, 14px, #444, none, bold);
    
    .form(@var-size: @base-font-size, @var-line-height: @base-line-height, @var-distance: @base-distance, @var-distance-factor: 0.75, @var-legend-size: @base-form-legend-size, @var-legend-color: @base-form-legend-color, @var-legend-border: @base-form-legend-border, @var-label-weight: @base-font-label-weight) {
        form {
            #box > .display(block);
            #unset > .distances();
            #form > .shorthand(@var-size, normal, @var-line-height);
            #form > .legend(@var-legend-size, @var-line-height, @var-legend-color, @var-legend-border, @var-distance);
            margin: ceil(@var-distance * @var-distance-factor) 0;
            
            fieldset {
                #box > .display(block);
                #unset > .distances();
                border: @base-form-fieldset-border;
                
                > div {
                    #box > .display(block);
                }
            }
            legend {
                #unset > .distances();
                #box > .display(block);
                #font > .shorthand(@var-legend-size, normal, @var-line-height);
                color: @var-legend-color;
                border: @var-legend-border;
                width: 100%;
                
                + * {
                    padding-top: @var-distance;
                }
            }
            label {
                font-weight: @var-label-weight;
            }
            > div {
                #box > .display(block);
            }
        }
    }
    
    // @methode: .base()
    // @usage: #form > .base(12px, 1.4em, 20px, 0.75, 14px, #444, none, bold);
    
    .base(@var-size: @base-font-size, @var-line-height: @base-line-height, @var-distance: @base-distance, @var-distance-factor: 0.75, @var-legend-size: @base-form-legend-size, @var-legend-color: @base-form-legend-color, @var-legend-border: @base-form-legend-border, @var-label-weight: @base-font-label-weight) {
        #form > .form(@var-size, @var-line-height, @var-distance, @var-distance-factor, @var-legend-size, @var-legend-color, @var-legend-border, @var-label-weight);
    }
    
    // @methode: .label
    // @usage: #form > .label(bold, 20px, 0.25);
    
    .label(@var-weight: @base-font-label-weight, @var-distance: @base-distance, @var-factor: 0.25) {
        label {
            #box > .display(block);
            margin-bottom: ceil(@var-distance * @var-factor);
            font-weight: @var-weight;
        }
    }
    
    // @methode: .input
    // @usage: #form > .input(12px, 1.4em, 20px, ~"1px solid #ddd", #333, @base-form-area-shadow, 3px);
    
    .input(@var-size: @base-font-size, @var-line-height: @base-line-height, @var-distance: @base-distance, @var-border: @base-form-input-border, @var-border-focus-color: @base-form-input-border-focus, @var-shadow: @base-form-input-shadow, @var-radius: @base-form-input-radius) {
        input {
            &[type="text"],
            &[type="password"],
            &[type="datetime"],
            &[type="datetime-local"],
            &[type="date"],
            &[type="month"],
            &[type="time"],
            &[type="week"],
            &[type="number"],
            &[type="email"],
            &[type="url"],
            &[type="search"],
            &[type="tel"],
            &[type="color"] {
                #form > .input-element(@var-size, @var-line-height, @var-distance, @var-border, @var-shadow, @var-radius, 100%, 0.2, 0.4, 0.75);
                #form > .input-focus-border(@var-border-focus-color);
            }
            &[type="file"] {
                #box > .display(block);
                #base > .backface-visibility(show);
            }
        }
    }
    
    // @methode: .textarea
    // @usage: #form > .textarea(12px, 1.4em, 20px, ~"1px solid #ddd", #333, @base-form-area-shadow, 3px);
    
    .textarea(@var-size: @base-font-size, @var-line-height: @base-line-height, @var-distance: @base-distance, @var-border: @base-form-area-border, @var-border-focus-color: @base-form-area-border-focus, @var-shadow: @base-form-area-shadow, @var-radius: @base-form-area-radius) {
        textarea {
            #form > .input-element(@var-size, @var-line-height, @var-distance, @var-border, @var-shadow, @var-radius, 100%, 0.2, 0.4, 0.75);
            #form > .input-focus-border(@var-border-focus-color);
        }
    }
    
    // @methode: .checkboxes
    // @usage: #form > .checkboxes(20px);
    
    .checkboxes(@var-distance: @base-distance) {
        input {
            &[type="checkbox"]{
                float: left;
                margin: ceil(@var-distance * 0.1) ceil(@var-distance * 0.25) 0 0;
                line-height: normal;
                width: auto;
            }
        }
    }
    
    // @methode: .radio
    // @usage: #form > .radio(20px);
    
    .radio(@var-distance: @base-distance) {
        input {
            &[type="radio"]{
                float: left;
                margin: ceil(@var-distance * 0.1) ceil(@var-distance * 0.25) 0 0;
                line-height: normal;
                width: auto;
            }
        }
    }
    
    // @methode: .select
    // @usage: #form > .select(12px, 1.4em, 20px, ~"1px solid #ddd", #333, @base-form-area-shadow, 3px);
    
    .select(@var-size: @base-font-size, @var-line-height: @base-line-height, @var-distance: @base-distance, @var-border: @base-form-select-border, @var-border-focus-color: @base-form-select-border-focus, @var-shadow: @base-form-select-shadow, @var-radius: @base-form-select-radius) {
        select {
            #form > .input-element(@var-size, @var-line-height, @var-distance, @var-border, @var-shadow, @var-radius, 100%, 0.2, 0.4, 0.75);
            #form > .input-focus-border(@var-border-focus-color);
        }
    }
    
    // @methode: .button
    // @usage: #form > .button(20px);
    
    .button(@var-distance: @base-distance) {
        .button-style() {
            #button > .base();
            #button > .border();
            #button > .background();
        }
        input {
            &[type="button"],
            &[type="reset"],
            &[type="submit"] {
                .button-style();
            }
        }
        button {
            .button-style()
        }
        div {
            &:first-child {
                &[type="button"]:first-child,
                &[type="reset"]:first-child,
                &[type="submit"]:first-child,
                button:first-child {
                    margin-top: 0;
                }
            }
            &[type="button"]:first-child,
            &[type="reset"]:first-child,
            &[type="submit"]:first-child,
            button:first-child {
                margin-top: ceil(@var-distance * 0.75);
            }
        }
    }
}